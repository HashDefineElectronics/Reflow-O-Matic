///////////////////////////////////////////////////////////////////////////
/// \file pid.h
/// \brief PID header
/// \author Ronald Sousa
///////////////////////////////////////////////////////////////////////////
#ifndef     __PID_H__
#define     __PID_H__


    ///////////////////////////////////////////////////////////////////////////
    /// \brief defien PID data type
    ///////////////////////////////////////////////////////////////////////////
    typedef struct
    {
        ///////////////////////////////////////////////////////////////////////////
        /// \brief P gain
        /////////////////////////////////////////////////////////////////////////// 
        float P;
        ///////////////////////////////////////////////////////////////////////////
        /// \brief I gain
        /////////////////////////////////////////////////////////////////////////// 
        float I;
        ///////////////////////////////////////////////////////////////////////////
        /// \brief P gain
        /////////////////////////////////////////////////////////////////////////// 
        float D;
        ///////////////////////////////////////////////////////////////////////////
        /// \brief Last calculated  Error
        /////////////////////////////////////////////////////////////////////////// 
        float LastError;    
        ///////////////////////////////////////////////////////////////////////////
        /// \brief Intergral error
        /////////////////////////////////////////////////////////////////////////// 
        float IntergralError;
        
    }PIDType;
    
    void PID_Init(void);
    float PID_Process(PIDType *pidParameter, const float targetValue, const float actualValue);
    
    
#endif